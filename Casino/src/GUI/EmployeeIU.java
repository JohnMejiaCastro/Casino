package GUI;

import Casino.persistence.DBCasino;
import Casino.persistence.XMLMachineFile;
import Casino.persistence.XMLReportDay;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import logic.DataDayReport;
import logic.Machine;
import GUI.AddDeleteMachines;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.transform.Result;

/**
 *
 * @author USUARIO
 */
public class EmployeeIU extends javax.swing.JFrame {

    private DBCasino dataFile;

    public DBCasino getDataFile() {
        return dataFile;
    }

    public void setDataFile(DBCasino dataFile) {
        this.dataFile = dataFile;
    }

    /**
     * Creates new form EmployeeIU
     */
    public EmployeeIU() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("EMPLOYEE");
        JacquiDate.setVisible(true);

        this.newInterface();
//        this.setDataFile(new DBCasino());
//        this.selectMachine();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panDataEmployee = new javax.swing.JPanel();
        labPhoto = new javax.swing.JLabel();
        labPokerland = new javax.swing.JLabel();
        butLogOut = new javax.swing.JButton();
        panDataReport = new javax.swing.JPanel();
        labNumberMachine = new javax.swing.JLabel();
        labInCounter = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        labOutCounter = new javax.swing.JLabel();
        txtOut = new javax.swing.JTextField();
        butNew = new javax.swing.JButton();
        JacquiDate = new com.toedter.calendar.JDateChooser();
        jcbNumberMachine = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panDataEmployee.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee"));

        labPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/admon.png"))); // NOI18N

        labPokerland.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/LETRAS.PNG"))); // NOI18N

        butLogOut.setBackground(new java.awt.Color(204, 0, 0));
        butLogOut.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        butLogOut.setText("Sign out ");
        butLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panDataEmployeeLayout = new javax.swing.GroupLayout(panDataEmployee);
        panDataEmployee.setLayout(panDataEmployeeLayout);
        panDataEmployeeLayout.setHorizontalGroup(
            panDataEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDataEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labPokerland)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(butLogOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labPhoto)
                .addGap(19, 19, 19))
        );
        panDataEmployeeLayout.setVerticalGroup(
            panDataEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDataEmployeeLayout.createSequentialGroup()
                .addGroup(panDataEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labPhoto)
                    .addComponent(butLogOut))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panDataEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labPokerland, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panDataReport.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labNumberMachine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labNumberMachine.setText("Number Machine:");

        labInCounter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labInCounter.setText("In Counter:");

        txtInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        labOutCounter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labOutCounter.setText("Out Counter:");

        txtOut.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        butNew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butNew.setText("New");
        butNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNewActionPerformed(evt);
            }
        });

        jcbNumberMachine.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
        jcbNumberMachine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbNumberMachineMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panDataReportLayout = new javax.swing.GroupLayout(panDataReport);
        panDataReport.setLayout(panDataReportLayout);
        panDataReportLayout.setHorizontalGroup(
            panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDataReportLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labInCounter)
                    .addComponent(labOutCounter)
                    .addComponent(labNumberMachine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOut, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(txtInput, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jcbNumberMachine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDataReportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JacquiDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(butNew)
                .addGap(166, 166, 166))
        );
        panDataReportLayout.setVerticalGroup(
            panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDataReportLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNumberMachine)
                    .addComponent(jcbNumberMachine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labInCounter)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labOutCounter)
                    .addComponent(txtOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panDataReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butNew)
                    .addComponent(JacquiDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panDataReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panDataEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panDataEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panDataReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLogOutActionPerformed
        // TODO add your handling code here:
        Login Wconnect = new Login();
        Wconnect.setVisible(true);
        dispose();
    }//GEN-LAST:event_butLogOutActionPerformed

    private void butNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNewActionPerformed
        if (butNew.getText().equalsIgnoreCase("New")) {
            this.newInterface();
        } else {
            this.saveInterface();
        }
    }//GEN-LAST:event_butNewActionPerformed

    private void jcbNumberMachineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbNumberMachineMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jcbNumberMachineMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeIU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeIU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeIU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeIU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeIU().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JacquiDate;
    private javax.swing.JButton butLogOut;
    private javax.swing.JButton butNew;
    private javax.swing.JComboBox jcbNumberMachine;
    private javax.swing.JLabel labInCounter;
    private javax.swing.JLabel labNumberMachine;
    private javax.swing.JLabel labOutCounter;
    private javax.swing.JLabel labPhoto;
    private javax.swing.JLabel labPokerland;
    private javax.swing.JPanel panDataEmployee;
    private javax.swing.JPanel panDataReport;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtOut;
    // End of variables declaration//GEN-END:variables

    /**
     * You prepare the interface to enter a new a item
     */
    private void newInterface() {

        txtInput.setText("");
        txtOut.setText("");
        JacquiDate.setDate(new Date());
        butNew.setText("Save");

    }

    /**
     * You Save the Dta of Interface
     *
     */
    private void saveInterface() {
        if (jcbNumberMachine.getSelectedItem().equals(" ")
                || txtInput.getText().equals("")
                || txtOut.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please, fill the requiered fields",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            DataDayReport dateReport = interface2Object();

        }
    }

    /**
     * You obtain data from the interface and passes it to an object
     *
     * @return DataDayReport dateReport
     */
    private DataDayReport interface2Object() {
        DataDayReport dateReport = new DataDayReport();

        dateReport.setNumberMachine("" + jcbNumberMachine.getSelectedItem());
        dateReport.setMachineInputDayCurrent(Integer.parseInt(txtInput.getText()));
        dateReport.setMachineOutDayCurrent(Integer.parseInt(txtOut.getText()));
        dateReport.setDayDate(JacquiDate.getDate());

        return dateReport;
    }

    /**
     * You obtain the Number Machine in Jcombobox
     *
     */
    private void selectMachine() {
         
        String query = "SELECT * FROM machine";
        
        if (this.getDataFile().execute(query)) {
       
        try {
                while (this.getDataFile().getResultSet().next()) {
                    jcbNumberMachine.addItem(dataFile.getResultSet().getInt("numberMachine"));
                }
            
            }catch (SQLException ex) {
             Logger.getLogger(EmployeeIU.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        }
    }

}
