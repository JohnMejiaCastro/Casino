/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Casino.persistence.DBCasino;
import Casino.persistence.XMLUsers;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import logic.PDFReport;

import logic.Users;

/**
 *
 * @author johnleandro
 */
public class AddDeletedUsers extends javax.swing.JFrame {

    private DBCasino dataFile;

    public DBCasino getDataFile() {
        return dataFile;
    }

    public void setDataFile(DBCasino dataFile) {
        this.dataFile = dataFile;
    }

    public AddDeletedUsers() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("USERS");
        labPath.setVisible(false);
        this.selectUser();
    }
    
    public AddDeletedUsers(DBCasino dataFile) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("USERS");
        labPath.setVisible(false);
        this.dataFile = dataFile;
        this.selectUser();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butGroupType = new javax.swing.ButtonGroup();
        panDataUsers = new javax.swing.JPanel();
        labPhoto = new javax.swing.JLabel();
        labPokerland = new javax.swing.JLabel();
        labPath = new javax.swing.JLabel();
        panAddUser = new javax.swing.JPanel();
        labUserCC = new javax.swing.JLabel();
        txtUsersCC = new javax.swing.JTextField();
        labTypeUser = new javax.swing.JLabel();
        rbtAdmon = new javax.swing.JRadioButton();
        rbtEmployed = new javax.swing.JRadioButton();
        labPasswordUser = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        butFirst = new javax.swing.JButton();
        butPrevious = new javax.swing.JButton();
        butNext = new javax.swing.JButton();
        butLast = new javax.swing.JButton();
        butNew = new javax.swing.JButton();
        butUpdate = new javax.swing.JButton();
        butDelete = new javax.swing.JButton();
        butBack = new javax.swing.JButton();
        butReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panDataUsers.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panDataUsers.setToolTipText("");

        labPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/admon.png"))); // NOI18N

        labPokerland.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/LETRAS.PNG"))); // NOI18N

        javax.swing.GroupLayout panDataUsersLayout = new javax.swing.GroupLayout(panDataUsers);
        panDataUsers.setLayout(panDataUsersLayout);
        panDataUsersLayout.setHorizontalGroup(
            panDataUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDataUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labPokerland, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labPath)
                .addGap(114, 114, 114)
                .addComponent(labPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panDataUsersLayout.setVerticalGroup(
            panDataUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDataUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panDataUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labPokerland, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panDataUsersLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labPath)))
                .addContainerGap())
        );

        panAddUser.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        labUserCC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labUserCC.setText("User (C.C)");

        txtUsersCC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        labTypeUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labTypeUser.setText("User Type");

        butGroupType.add(rbtAdmon);
        rbtAdmon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtAdmon.setSelected(true);
        rbtAdmon.setText("Administrador");
        rbtAdmon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtAdmonActionPerformed(evt);
            }
        });

        butGroupType.add(rbtEmployed);
        rbtEmployed.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtEmployed.setText("Employee");

        labPasswordUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labPasswordUser.setText("User Password");

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        butFirst.setText("|<");
        butFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butFirstActionPerformed(evt);
            }
        });

        butPrevious.setText("<");
        butPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPreviousActionPerformed(evt);
            }
        });

        butNext.setText(">");
        butNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNextActionPerformed(evt);
            }
        });

        butLast.setText(">|");
        butLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLastActionPerformed(evt);
            }
        });

        butNew.setText("New");
        butNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNewActionPerformed(evt);
            }
        });

        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butDelete.setText("Delete");
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panAddUserLayout = new javax.swing.GroupLayout(panAddUser);
        panAddUser.setLayout(panAddUserLayout);
        panAddUserLayout.setHorizontalGroup(
            panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAddUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAddUserLayout.createSequentialGroup()
                        .addComponent(labPasswordUser)
                        .addGap(63, 63, 63)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panAddUserLayout.createSequentialGroup()
                        .addComponent(butFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butLast)
                        .addGap(77, 77, 77)
                        .addComponent(butNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butDelete))
                    .addGroup(panAddUserLayout.createSequentialGroup()
                        .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labUserCC)
                            .addComponent(labTypeUser))
                        .addGap(94, 94, 94)
                        .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panAddUserLayout.createSequentialGroup()
                                .addComponent(rbtAdmon)
                                .addGap(6, 6, 6)
                                .addComponent(rbtEmployed))
                            .addComponent(txtUsersCC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panAddUserLayout.setVerticalGroup(
            panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAddUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labUserCC)
                    .addComponent(txtUsersCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAddUserLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(labTypeUser))
                    .addGroup(panAddUserLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtEmployed)
                            .addComponent(rbtAdmon))))
                .addGap(9, 9, 9)
                .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labPasswordUser)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butFirst)
                    .addComponent(butPrevious)
                    .addComponent(butNext)
                    .addComponent(butLast)
                    .addComponent(butUpdate)
                    .addComponent(butNew)
                    .addComponent(butDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        butBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/back.PNG"))); // NOI18N
        butBack.setText("Back Menu");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        butReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/clipboard-charts-32.png"))); // NOI18N
        butReport.setText("Report");
        butReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(butBack, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(butReport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panAddUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panDataUsers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panDataUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(butReport))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtAdmonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAdmonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtAdmonActionPerformed

    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackActionPerformed
        MenuManager Wconnect = new MenuManager(this.getDataFile());
        Wconnect.setVisible(true);
        dispose();
    }//GEN-LAST:event_butBackActionPerformed

    private void butFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFirstActionPerformed
        try {
            this.getDataFile().getResultSet().first();
            this.updateView();
        } catch (SQLException ex) {
            Logger.getLogger(AddDeleteMachines.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_butFirstActionPerformed

    private void butPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPreviousActionPerformed

        try {
            if (!this.getDataFile().getResultSet().isFirst()) {
                this.getDataFile().getResultSet().previous();
                this.updateView();
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_butPreviousActionPerformed

    private void butNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNextActionPerformed
        try {
            if (!this.getDataFile().getResultSet().isLast()) {
                this.getDataFile().getResultSet().next();
                this.updateView();
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_butNextActionPerformed

    private void butLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLastActionPerformed

        try {
            this.getDataFile().getResultSet().last();
            this.updateView();
        } catch (SQLException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_butLastActionPerformed

    private void butNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNewActionPerformed
        if (butNew.getText().equalsIgnoreCase("New")) {
            this.newInterface();
        } else if (butNew.getText().equalsIgnoreCase("save")) {
            if (validateView()) {
                this.insertUser();
                butNew.setText("New");
                butFirst.setEnabled(true);
                butPrevious.setEnabled(true);
                butNext.setEnabled(true);
                butLast.setEnabled(true);
                butUpdate.setEnabled(true);
                butDelete.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Please, fill the requeried fields",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_butNewActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        this.updateUser();
        JOptionPane.showMessageDialog(this, "Updated record!", "Update record",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed

        if (JOptionPane.showConfirmDialog(this, "are you to delete record ?",
                "delete record", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            this.deleteUser();
            JOptionPane.showMessageDialog(this, "delete record", "delete record",
                    JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_butDeleteActionPerformed

    private void butReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butReportActionPerformed
        String[] fields = {"User c.c", "user type"};
        String[] dbFields = {"userCC", "userType"};

        PDFReport report = new PDFReport(
            "userReport.pdf",
            "BATS DEVELOPERS",
            "Casino",
            "Users Report",
            "Casino POKERLAND",
            fields,
            dbFields,
            this.getDataFile().getResultSet());
        

        try {
            report.generatePDF();
            File path = new File("userReport.pdf");
            Desktop.getDesktop().open(path);
        } catch (IOException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_butReportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDeletedUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDeletedUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDeletedUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDeletedUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddDeletedUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butBack;
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butFirst;
    private javax.swing.ButtonGroup butGroupType;
    private javax.swing.JButton butLast;
    private javax.swing.JButton butNew;
    private javax.swing.JButton butNext;
    private javax.swing.JButton butPrevious;
    private javax.swing.JButton butReport;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel labPasswordUser;
    private javax.swing.JLabel labPath;
    private javax.swing.JLabel labPhoto;
    private javax.swing.JLabel labPokerland;
    private javax.swing.JLabel labTypeUser;
    private javax.swing.JLabel labUserCC;
    private javax.swing.JPanel panAddUser;
    private javax.swing.JPanel panDataUsers;
    private javax.swing.JRadioButton rbtAdmon;
    private javax.swing.JRadioButton rbtEmployed;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsersCC;
    // End of variables declaration//GEN-END:variables

    /**
     * You prepare the interface to enter a new a item
     */
    private void newInterface() {
        txtUsersCC.setText("");
        txtPassword.setText("");
        rbtEmployed.setSelected(true);
        butNew.setText("Save");
        butFirst.setEnabled(false); // Para deshabilitar un boton
        butPrevious.setEnabled(false);
        butNext.setEnabled(false);
        butLast.setEnabled(false);
        butDelete.setEnabled(false);
        butUpdate.setEnabled(false);
    }

    private boolean validateView() {
        boolean validate = !(txtUsersCC.getText().equals("")
                || txtPassword.getText().equals(""));
        return validate;
    }

    /**
     * Obtain the view data and tranfer it to the object
     */
    private Users view2Object() {
        Users us = new Users();

        us.setUserCC(Long.parseLong(txtUsersCC.getText()));
        us.setUserType(rbtAdmon.isSelected() ? 0 : 1);
        us.setPassword((txtPassword.getText()));

        return us;
    }

    /**
     * You obtain data from an object and pass it to the view
     */
    private void updateView() {
        if (this.getDataFile().getResultSet() == null) {
            this.newInterface();
        } else {
            this.object2View();
        }
    }

    /**
     * You prepare the view to enter a new employee data
     */
    /**
     * Result set -> object
     */
    private void object2View() {
        Users us = new Users();
        try {
            us.setUserCC(this.getDataFile().getResultSet().getLong("userCC"));
            us.setUserType(this.getDataFile().getResultSet().getInt("userType"));
            us.setPassword(this.getDataFile().getResultSet().getString("password"));
            this.object2View(us);
        } catch (SQLException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Show the object data into view
     *
     * @param employee Employee to show
     */
    private void object2View(Users us) {
        txtUsersCC.setText("" + us.getUserCC());
        txtPassword.setText(us.getPassword());
        rbtAdmon.setSelected(us.getUserType() == 0);
        rbtEmployed.setSelected(us.getUserType() == 1);

    }

    /**
     * Select employees from DB
     */
    private void selectUser() {
        String query = "SELECT * FROM user ";
        if (this.getDataFile().execute(query)) {
            try {
                this.getDataFile().getResultSet().next();
                this.updateView();
            } catch (SQLException ex) {
                Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * Insert new us
     */
    private void insertUser() {
        Users us = this.view2Object();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        String query = "INSERT INTO user "
                + "(userCC, userType, password) "
                + "VALUES ("
                + us.getUserCC() + ","
                + us.getUserType() + ",'"
                + us.getPassword() + "' "
                + ")";
        if (this.getDataFile().execute(query)) {
            this.selectUser();
            this.searchUser(us.getUserCC());
        }
    }

    /**
     * Update us
     */
    private void updateUser() {
        Users us = this.view2Object();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        String query = "UPDATE user SET "
                + "userType = " + us.getUserType() + ", "
                + "password = '" + us.getPassword()+ "' "
                + "WHERE userCC = " + us.getUserCC();
        if (this.getDataFile().execute(query)) {
            this.selectUser();
            this.searchUser(us.getUserCC());
        }
    }

    /**
     * Delete us
     */
    private void deleteUser() {
        Users us = this.view2Object();
        String query = "DELETE * FROM user WHERE userCC = " + us.getUserCC();
        if (this.getDataFile().execute(query)) {
            this.selectUser();
        }
    }

    /**
     * Search us by id
     *
     * @param id Employee id
     */
    private void searchUser(long userCC) {
        boolean find = false;
        try {
            if (this.getDataFile().getResultSet() != null) {
                long lastUserCC = this.getDataFile().getResultSet().getLong("userCC");
                this.getDataFile().getResultSet().beforeFirst();
                while (this.getDataFile().getResultSet().next()) {
                    if (this.getDataFile().getResultSet().getLong("userCC") == userCC) {
                        find = true;
                        break;
                    }
                }
                if (find) {
                    this.updateView();
                } else {
                    this.getDataFile().getResultSet().first();
                    this.searchUser(lastUserCC);
                    JOptionPane.showMessageDialog(this, "User" + userCC + " was not found!");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddDeletedUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
